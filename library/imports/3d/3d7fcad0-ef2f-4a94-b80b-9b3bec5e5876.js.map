{
  "version": 3,
  "sources": [
    "unknown"
  ],
  "names": [],
  "mappings": "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",
  "file": "unknown",
  "sourcesContent": [
    "cc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        // foo: {\r\n        //    default: null,      // The default value will be used only when the component attaching\r\n        //                           to a node for the first time\r\n        //    url: cc.Texture2D,  // optional, default is typeof default\r\n        //    serializable: true, // optional, default is true\r\n        //    visible: true,      // optional, default is true\r\n        //    displayName: 'Foo', // optional\r\n        //    readonly: false,    // optional, default is false\r\n        // },\r\n        // ...\r\n        \r\n    },\r\n\r\n    // use this for initialization\r\n    onLoad: function () {\r\n        cc.game.addPersistRootNode(this.node);\r\n    },\r\n\r\n    // called every frame, uncomment this function to activate update callback\r\n    update: function (dt) {\r\n        Global.update_progress_bar(dt);\r\n        \r\n    },\r\n});\r\n\r\n\r\nvar six_horse_conf = \r\n[\r\n    {name: 'one', payoutOds:'13:5', handicap:'13:5', },\r\n    {name: 'two', payoutOds:'13:5', handicap:'13:5', },\r\n    {name: 'three', payoutOds:'13:5', handicap:'13:5', },\r\n    {name: 'four', payoutOds:'13:5', handicap:'13:5', },\r\n    {name: 'five', payoutOds:'13:5', handicap:'13:5', },\r\n    {name: 'six', payoutOds:'13:5', handicap:'13:5', },\r\n];\r\n\r\nwindow.Global = {\r\n    gameName: 'race_horse',\r\n    horse_picked:1,\r\n    six_horse_info: six_horse_conf,\r\n    curr_scene: 'HowToPlay',\r\n    \r\n    winner: 3,\r\n    \r\n    bet_subtype: 1,\r\n    change_subtype: function(n) {\r\n        this.bet_subtype = n;  \r\n    },\r\n    \r\n    bet_amount: 100,\r\n    change_bet_amount: function(positive){\r\n        if(positive) \r\n            this.bet_amount += 10;    \r\n        else\r\n            this.bet_amount -= 10; \r\n        if(this.bet_amount > 250) this.bet_amount = 250;\r\n        if(this.bet_amount < 10)  this.bet_amount = 10;\r\n        return this.bet_amount;\r\n    },\r\n    \r\n    time_to_race: 10,\r\n    time_to_race_past: 0,\r\n    update_progress_bar: function(dt) {\r\n     if(this.time_to_race > 0) {\r\n            this.time_to_race_past += dt;\r\n            if(this.time_to_race_past >= this.time_to_race) {\r\n                this.time_to_race = 0;\r\n                this.run_scene('race');\r\n            }\r\n        }        \r\n    },\r\n    \r\n    progress_bar: function() {\r\n        if(this.time_to_race > 0)\r\n            return 1 - this.time_to_race_past / this.time_to_race;  \r\n        return 0;\r\n    },\r\n            \r\n\r\n    preload_scene: function() {\r\n        var scene = this.curr_scene;\r\n        var nexts = [];\r\n        if(scene == \"logo\") nexts.push('HowToPlay');\r\n        if(scene == \"HowToPlay\") nexts.push(\"bet\");\r\n        if(scene == \"bet\") nexts.push(\"BetOneHorse\", \"HowToPlay\", \"race\");\r\n        if(scene == \"BetOneHorse\") nexts.push(\"bet\", \"race\");       \r\n        if(scene == \"race\") nexts.push(\"bet\");\r\n        cc.log(nexts);\r\n        for(var a in nexts) {\r\n            cc.director.preloadScene(nexts[a], function(){});\r\n        }\r\n    },\r\n    \r\n    run_scene: function(scene) {\r\n        cc.director.loadScene(scene); \r\n        this.curr_scene = scene;\r\n    }\r\n            \r\n};\r\n\r\n\r\n\r\n\r\n"
  ]
}