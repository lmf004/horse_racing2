{
  "version": 3,
  "sources": [
    "unknown"
  ],
  "names": [],
  "mappings": "AAAA,EAAE,CAAC,KAAK,CAAC;AACL,eAAS,EAAE,CAAC,SAAS;;AAErB,cAAU,EAAE;;;;;;;;;;;AAWR,iBAAS,EAAE;AACP,uBAAS,IAAI;AACb,gBAAI,EAAE,EAAE,CAAC,MAAM;SAClB;AACD,mBAAW,EAAE;AACT,uBAAS,IAAI;AACb,gBAAI,EAAE,EAAE,CAAC,MAAM;SAClB;KACJ;;;AAGD,UAAM,EAAE,kBAAY;AAChB,YAAI,IAAI,GAAG,IAAI,CAAC;AAChB,YAAI,CAAC,YAAY,CAAE,YAAU;AACzB,cAAE,CAAC,QAAQ,CAAC,SAAS,CAAC,WAAW,CAAC,CAAC;SACtC,EAAE,CAAC,CAAC,CAAC;;AAEN,YAAI,CAAC,GAAG,CAAC,CAAC;AACV,YAAI,GAAG,GAAG,EAAE,CAAC;AACb,YAAI,CAAC,GAAG,CAAC,CAAC;AACV,YAAG,CAAC,IAAI,CAAC,GAAC,CAAC,EAAE,CAAC,GAAG,GAAG,IAAE,CAAC,CAAC,GAAC,CAAC,CAAA,GAAE,CAAC,CAAA,AAAC,GAAE,CAAC,CAAC,AAAC,CAAC,KAC/B,CAAC,GAAG,CAAC,GAAG,IAAE,CAAC,GAAC,CAAC,CAAA,AAAC,GAAC,GAAG,GAAC,CAAC,CAAA,GAAG,CAAC,CAAC,AAAC,CAAC;AAChC,UAAE,CAAC,GAAG,CAAC,uBAAuB,GAAE,CAAC,CAAC,CAAC;AACnC,YAAI,EAAE,GAAG,EAAE,CAAC;AACZ,aAAI,IAAI,CAAC,GAAC,CAAC,EAAE,CAAC,GAAC,CAAC,EAAE,EAAE,CAAC,EAAE;AACnB,cAAE,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,GAAC,GAAG,CAAC,CAAC;SACtB;;AAED,UAAE,CAAC,OAAO,CAAC,UAAS,CAAC,EAAC;AAClB,gBAAI,GAAG,GAAG,EAAE,CAAC,WAAW,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;AAC3C,gBAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC;AACxB,eAAG,CAAC,WAAW,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;SACzB,CAAC,CAAC;;AAEH,YAAI,GAAG,GAAG,EAAE,CAAC,WAAW,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;AACzC,YAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC;AACxB,WAAG,CAAC,WAAW,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;;AAEtB,YAAI,EAAE,GAAG,CAAC,CAAC;AACX,YAAI,GAAG,GAAG,CAAC,CAAC;AACZ,YAAI,CAAC,QAAQ,CAAC,YAAU;;AAEpB,eAAG,CAAC,WAAW,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;AAC3B,cAAE,IAAI,GAAG,CAAC;AACV,gBAAG,GAAG,GAAG,CAAC,IAAI,EAAE,IAAI,CAAC,EAAE;AAAE,kBAAE,IAAI,CAAC,CAAC,AAAC,GAAG,GAAG,CAAC,CAAC,CAAC;aAAE;AAC7C,gBAAG,GAAG,GAAG,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC,EAAE;AAAE,kBAAE,IAAI,CAAC,CAAC,AAAC,GAAG,GAAG,CAAC,CAAC;aAAE;SAChD,EAAE,GAAG,CAAC,CAAC;KACX;;CAMJ,CAAC,CAAC",
  "file": "unknown",
  "sourcesContent": [
    "cc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        // foo: {\r\n        //    default: null,      // The default value will be used only when the component attaching\r\n        //                           to a node for the first time\r\n        //    url: cc.Texture2D,  // optional, default is typeof default\r\n        //    serializable: true, // optional, default is true\r\n        //    visible: true,      // optional, default is true\r\n        //    displayName: 'Foo', // optional\r\n        //    readonly: false,    // optional, default is false\r\n        // },\r\n        // ...\r\n        dotActive: {\r\n            default: null,\r\n            type: cc.Prefab\r\n        },\r\n        dotInactive: {\r\n            default: null,\r\n            type: cc.Prefab\r\n        }\r\n    },\r\n\r\n    // use this for initialization\r\n    onLoad: function () {\r\n        var self = this;\r\n        this.scheduleOnce( function(){\r\n            cc.director.loadScene('HowToPlay');\r\n        }, 9);\r\n        \r\n        var n = 5; \r\n        var dis = 50;\r\n        var x = 0;\r\n        if(1 == n%2) x = dis*((n-1)/2)*(-1);\r\n        else x = (dis*(n/2)-dis/2)*(-1);\r\n        cc.log(\"-----------------001 \" +x);\r\n        var xa = [];\r\n        for(var i=0; i<n; ++i) {\r\n            xa.push(x + i*dis);\r\n        }\r\n        \r\n        xa.forEach(function(x){\r\n            var dot = cc.instantiate(self.dotInactive);\r\n            self.node.addChild(dot);\r\n            dot.setPosition(x, 0);                         \r\n        });\r\n        \r\n        var dot = cc.instantiate(self.dotActive);\r\n        this.node.addChild(dot);\r\n        dot.setPosition(x, 0);\r\n        \r\n        var ci = 0;\r\n        var dir = 1;\r\n        this.schedule(function(){\r\n            //dot.setPosition(xa[(ci++)%n], 0);\r\n            dot.setPosition(xa[ci], 0);\r\n            ci += dir;\r\n            if(dir > 0 && ci == n) { ci -= 2; dir = -1; }\r\n            if(dir < 0 && ci == -1) { ci += 2; dir = 1; }\r\n        }, 0.3);\r\n    },\r\n\r\n    // called every frame, uncomment this function to activate update callback\r\n    // update: function (dt) {\r\n\r\n    // },\r\n});\r\n"
  ]
}