{
  "version": 3,
  "sources": [
    "unknown"
  ],
  "names": [],
  "mappings": "AAAA,EAAE,CAAC,KAAK,CAAC;AACL,eAAS,EAAE,CAAC,SAAS;;AAErB,cAAU,EAAE;;;;;;;;;;;AAWR,mBAAW,EAAE;AACT,uBAAS,IAAI;AACb,gBAAI,EAAE,EAAE,CAAC,KAAK;SACjB;;AAED,WAAG,EAAE,EAAE,WAAS,IAAI,EAAE,IAAI,EAAE,EAAE,CAAC,IAAI,EAAE;AACrC,aAAK,EAAE,EAAE,WAAS,IAAI,EAAE,IAAI,EAAE,EAAE,CAAC,IAAI,EAAE;AACvC,YAAI,EAAE,EAAE,WAAS,IAAI,EAAE,IAAI,EAAE,EAAE,CAAC,IAAI,EAAE;;KAEzC;;;AAGD,UAAM,EAAE,kBAAY,EAEnB;;AAED,mBAAe,EAAE,yBAAS,GAAG,EAAE,IAAI,EAAE;AACjC,YAAI,CAAC,GAAG,CAAC,KAAK,GAAG,EAAE,CAAC,KAAK,CAAC,KAAK,CAAC;AAChC,YAAI,CAAC,KAAK,CAAC,KAAK,GAAG,EAAE,CAAC,KAAK,CAAC,KAAK,CAAC;AAClC,YAAI,CAAC,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC,KAAK,CAAC,KAAK,CAAC;AACjC,YAAG,IAAI,IAAI,CAAC,EAAE;AAAE,gBAAI,CAAC,GAAG,CAAC,KAAK,GAAG,EAAE,CAAC,KAAK,CAAC,MAAM,CAAC;SAAE;AACnD,YAAG,IAAI,IAAI,CAAC,EAAE;AAAE,gBAAI,CAAC,KAAK,CAAC,KAAK,GAAG,EAAE,CAAC,KAAK,CAAC,MAAM,CAAC;SAAE;AACrD,YAAG,IAAI,IAAI,CAAC,EAAE;AAAE,gBAAI,CAAC,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC,KAAK,CAAC,MAAM,CAAC;SAAE;AACpD,cAAM,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC;KAC/B;;AAED,wBAAoB,EAAE,8BAAS,GAAG,EAAE,IAAI,EAAE;AACtC,YAAI,KAAK,GAAG,MAAM,CAAC,iBAAiB,CAAC,IAAI,IAAE,CAAC,CAAC,CAAC;AAC9C,YAAI,CAAC,WAAW,CAAC,MAAM,GAAG,KAAK,GAAG,GAAG,CAAC;KACzC;;;;;CAKJ,CAAC,CAAC",
  "file": "unknown",
  "sourcesContent": [
    "cc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        // foo: {\r\n        //    default: null,      // The default value will be used only when the component attaching\r\n        //                           to a node for the first time\r\n        //    url: cc.Texture2D,  // optional, default is typeof default\r\n        //    serializable: true, // optional, default is true\r\n        //    visible: true,      // optional, default is true\r\n        //    displayName: 'Foo', // optional\r\n        //    readonly: false,    // optional, default is false\r\n        // },\r\n        // ...\r\n        money_label: {\r\n            default: null,\r\n            type: cc.Label\r\n        },\r\n        \r\n        win: { default: null, type: cc.Node },\r\n        place: { default: null, type: cc.Node },\r\n        show: { default: null, type: cc.Node },\r\n        \r\n    },\r\n\r\n    // use this for initialization\r\n    onLoad: function () {\r\n        \r\n    },\r\n    \r\n    subtype_clicked: function(evt, data) {\r\n        this.win.color = cc.Color.WHITE;\r\n        this.place.color = cc.Color.WHITE;\r\n        this.show.color = cc.Color.WHITE;\r\n        if(data == 1) { this.win.color = cc.Color.YELLOW; }    \r\n        if(data == 2) { this.place.color = cc.Color.YELLOW; }    \r\n        if(data == 3) { this.show.color = cc.Color.YELLOW; }    \r\n        Global.change_subtype(data);\r\n    },\r\n    \r\n    change_money_clicked: function(evt, data) {\r\n        var value = Global.change_bet_amount(data==2);\r\n        this.money_label.string = value + \"K\";\r\n    }\r\n    // called every frame, uncomment this function to activate update callback\r\n    // update: function (dt) {\r\n        \r\n    // },\r\n});\r\n"
  ]
}